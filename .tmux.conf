# Vi-Mode KeyMap
set-window-option -g mode-keys vi

# Default Terminal
set -g default-terminal "screen-256color"

# define a bigger scrollback, default is 2000 lines
set -g history-limit 10000

# Set the time in milliseconds for which tmux waits after an escape is input to determine.
# if it is part of a function or meta key sequences. 
set-option -s escape-time 0

# mouse operation
# ダブルクリックがフックされてしまうのでとりあえずoff
#set -g mode-mouse on
#set -g mouse-resize-pane on
#set -g mouse-select-pane on

# reload configuration
bind C-r source-file ~/.tmux.conf

# http://qiita.com/yuku_t/items/bea95b1bc6e6ca8a495b
set-option -g default-command "reattach-to-user-namespace -l zsh"


#################################################
# status-line
#################################################

#set-option -g status-fg black
#set-option -g status-bg white
#set-option -g status-justify left
#set-option -g status-interval 2
#
#set-option -g window-status-current-bg black
#set-option -g window-status-current-fg white
#set-window-option -g window-status-format "#F#I"
#set-window-option -g window-status-current-format "#F#I"
#
#set-option -g status-left-fg default
#set-option -g status-left-bg default
#set-option -g status-left ''
#
#set-option -g status-right-fg default
#set-option -g status-right-bg default
#set-option -g status-right 'Mem #(used-mem) LAve.[#(loadaverage)]'
#set-option -g status-right-length 100


#################################################
# power-line
#################################################
set-option -g status on
set-option -g status-interval 2
set-option -g status-utf8 on
set-option -g status-justify "left"
set-option -g status-left-length 100
set-option -g status-right-length 120
set-option -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/.tmux/tmux-powerline/powerline.sh right)"

set -g status-bg colour235
set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour15, bg=colour27]#F#I#[fg=colour27, bg=colour235]⮀"
set-window-option -g window-status-format "#[fg=colour27, bg=colour235]#F#I"


#################################################
# split pane
#################################################

# ペインの縦分割
bind s split-window -v
# ペインの横分割
bind v split-window -h

# 分割画面への移動をviライクに割当
unbind K
bind H select-pane -L
bind J select-pane -D
bind K select-pane -U
bind L select-pane -R

# アクティブなペインを閉じる
bind q kill-pane
#bind q confirm-before kill-pane # 閉じる前に確認する


#################################################
# under settings, based on screen-keys.conf,v 1.7
#################################################

# $Id: screen-keys.conf,v 1.7 2010/07/31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

# Set the prefix to ^Z.
unbind C-b
set -g prefix ^Z
bind a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x 
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c 
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays * 
unbind *
bind * list-clients

# next ^@ ^N sp n 
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^? 
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w 
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

## quit \ 
#unbind \
#bind \ confirm-before "kill-server"

# kill K k 
#unbind K
#bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l 
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split -v |
unbind |
bind | split-window

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' choose-window

# Escape enter copy-mode
unbind Escape
bind Escape copy-mode

